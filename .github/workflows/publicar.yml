name: publicar

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  publicar:
    runs-on: ubuntu-latest

    environment:
      name: despliegue

    env:
      ZOLA_VERSION: v0.19.2

    steps:
      - name: Instalar dependencias
        run: |
          sudo apt-get update
          sudo apt-get install openssh-client rsync minify

      - name: Actualizar sistema a Español
        run: |
          sudo locale-gen es_MX.UTF-8
          sudo update-locale

      - name: Extraer repositorio
        uses: actions/checkout@v4

      - name: Descargar Zola
        run: |
          wget "https://github.com/getzola/zola/releases/download/${ZOLA_VERSION}/zola-${ZOLA_VERSION}-x86_64-unknown-linux-gnu.tar.gz"

      - name: Instalar Zola
        run: |
          tar vxzf ./zola-${ZOLA_VERSION}-x86_64-unknown-linux-gnu.tar.gz

      - name: Construir sitio web
        run: |
          LANG=es_MX.UTF-8 ./zola build

      - name: Minificar HTML, CSS y JavaScript
        run: |
          minify -r -a -o ./ public

      - name: Instalar llave SSH
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_ID }}
          name: id_deploy
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      - name: Generar known_hosts
        env:
          HOST: ${{ secrets.HOST }}
          PORT: ${{ secrets.PORT }}
        run: |
          ssh-keyscan -p "$PORT" -H "$HOST" >> ~/.ssh/known_hosts

      - name: Generar configuración SSH
        env:
          HOST: ${{ secrets.HOST }}
          USER: ${{ secrets.USER }}
          PORT: ${{ secrets.PORT }}
        run: |
          echo -e "Host deploy\n  Hostname "$HOST"\n  User "$USER"\n  Port "$PORT"\n  IdentityFile ~/.ssh/id_deploy" > ~/.ssh/config

      - name: Desplegar en servidor
        run: |
          rsync -P -rvzc --delete -e 'ssh -v'  --itemize-changes public/ deploy:/public_html

      - name: Post-despliegue en servidor
        run: |
          ssh -v deploy fix-glib

  anunciar:
    needs: publicar

    runs-on: ubuntu-latest

    steps:
      - name: Extraer repositorio
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.before }}

      - name: Listar commits
        id: archivos-md
        env:
          BEFORE: ${{ github.event.before }}
        run: |
          git fetch origin main && git checkout main
          echo 'added_files<<EOF' >> "$GITHUB_OUTPUT"
          git diff --name-only --diff-filter=A ${BEFORE}..HEAD  -- content >> "$GITHUB_OUTPUT"
          echo 'EOF' >> "$GITHUB_OUTPUT"

      - name: Instalar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Actualizar Python
        run: |
          python3 -m pip install --upgrade pip setuptools requests

      - name: Anunciar nuevas publicaciones en Mastodon
        env:
          ARCHIVOS_MD_NUEVOS: "content/202501230857.md" #${{ steps.archivos-md.outputs.added_files }}
          ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
        run: |
          for ARCHIVO in ${ARCHIVOS_MD_NUEVOS}; do
            python3 mastodon.py $ARCHIVO
          done
